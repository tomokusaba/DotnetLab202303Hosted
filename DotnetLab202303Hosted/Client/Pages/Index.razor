@page "/"
@inject HttpClient http;
@using DotnetLab202303Hosted.Shared;
<h1>サンプル1</h1>
<EditForm Model="@parson" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>
            名前：
            <InputText @bind-Value="parson.Name" />
        </label>
    </p>
    <p>
        <label>
            誕生日：
            <InputDate @bind-Value="parson.Birthday" />
        </label>
    </p>
    <button type="submit">送信</button>
</EditForm>
@ErrorMessage
@if (parsons != null) {
<table class="table table-striped table-bordered">
    <thead class="table-primary">
        <tr>
            <td>名前</td>
            <td>誕生日</td>
        </tr>
    </thead>
    <tbody>
    @foreach(var items in parsons){
    <tr>
        <td>@items.Name</td>
        <td>@items.Birthday</td>
    </tr>
    }
        </tbody>
</table>
}
@code {
    private Parson parson = new();

    private IEnumerable<Parson>? parsons;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            parsons = await http.GetFromJsonAsync<IEnumerable<Parson>>("api/ParsonItems");
        }
        catch(Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    private async Task ValidSubmit()
    {
        await http.PostAsJsonAsync("api/ParsonItems", parson);
        parsons = await http.GetFromJsonAsync<IEnumerable<Parson>>("api/ParsonItems");
    }
}